{ pkgs ? import <nixpkgs> {} }:

pkgs.mkShell {
  name = "hashtable-java-env";
  
  buildInputs = with pkgs; [
    # Java Development Kit
    jdk17                    # Java 17 LTS (vers√£o est√°vel e amplamente suportada)
    
    # Development Tools
    git                      # Controle de vers√£o
    gnumake                  # Para Makefiles se necess√°rio
    
    # Documentation and Report Generation
    typst                    # Para gerar o relat√≥rio em PDF
    
    # Utilities
    tree                     # Visualizar estrutura de diret√≥rios
    which                    # Encontrar execut√°veis
    file                     # Identificar tipos de arquivo
    unzip                    # Descompactar arquivos
    curl                     # Download de arquivos
    wget                     # Download de arquivos (alternativa)
  ];

  # Vari√°veis de ambiente
  shellHook = ''
    echo "üöÄ Ambiente Java para Hash Table inicializado!"
    
    # Configurar JAVA_HOME se necess√°rio
    export JAVA_HOME="${pkgs.jdk17}/lib/openjdk"
    
    # Adicionar diret√≥rio bin ao PATH se existir
    if [ -d "./bin" ]; then
      export PATH="./bin:$PATH"
    fi
    
    # Aliases √∫teis
    alias compile="javac -d bin src/*.java"
    alias run="java -cp bin HashTableMain"
    alias clean="rm -rf bin/*.class"
    alias report="typst compile docs/relatorio.typ && echo 'Relat√≥rio gerado: docs/relatorio.pdf'"
    
    echo "Aliases dispon√≠veis:"
    echo "   ‚Ä¢ compile  - Compila o c√≥digo Java"
    echo "   ‚Ä¢ run      - Executa o programa principal"
    echo "   ‚Ä¢ clean    - Remove arquivos compilados"
    echo "   ‚Ä¢ report   - Gera relat√≥rio PDF"
    echo ""
    echo "Compilando e executando:"
    echo "   1. Execute: compile"
    echo "   2. Execute: run"
    echo ""
  '';

  # Configura√ß√µes espec√≠ficas do Java
  JAVA_OPTS = "-Xmx512m -Xms256m";
}
